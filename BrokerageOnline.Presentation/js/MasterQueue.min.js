var MasterQueue = { arns: [], arnName: [], AdhocRemarks: "", LogOut: function () { return sessionStorage.clear(), window.location.href = "../Login.aspx?mode=logout", !1 }, RefreshGridDetails: function () { Utility.ListSearchText = "", MasterQueue.ViewMasterQueue() }, ViewMasterQueue: function () { $("#modal_Advance_Search").modal("hide"); var e = $("#dd_channel option:selected"), t = []; $(e).each(function (e, a) { t.push([$(this).val()]) }); var a = t.toString(), n = $("#dd_dist_category option:selected"), r = []; $(n).each(function (e, t) { r.push([$(this).val()]) }); var i = r.toString(), o = "", s = $("#txt_arn").tokenInput("get"), d = []; $.each(s, function (e, t) { d.push(t.name) }), o = d.toString(), sessionStorage.setItem("DistributorCategoryMaster", i), sessionStorage.setItem("ChannelCreateMaster", a), sessionStorage.setItem("ARNCreateMaster", o), sessionStorage.setItem("ismasterqueue", !0), $("#hdr_name").text("Master Q"), $("#spn_user_name").text(sessionStorage.UserName), $("#spn_role_name").text(sessionStorage.RoleName), $("#tbl_masterqueue").jqGrid("clearGridData"), Utility.ServiceCall("POST", "BaseRackRateService.svc/GetCreateBaseRackRate", JSON.stringify({ ArnNo: o, Channel: a, DistributorCategory: i, Status: 1, MasterQueueStatus: 2, SearchFilter: Utility.ListSearchText }), "json", !1, !1, function (e) { for (var t = e.GetCreateBaseRackRateResult, a = 0; a < t.length; a++) jQuery("#tbl_masterqueue").jqGrid("addRowData", t[a].id, t[a]) }) }, ViewRackRate: function () { return sessionStorage.CurrentMenuselected = "nav_create", "nav_create" == sessionStorage.CurrentMenuselected ? window.location.href = "CreateRackRate.html?tokenkey=" + sessionStorage.sessionId + "&user=" + sessionStorage.userId : window.location.href = "RackRateInformation.html?tokenkey=" + sessionStorage.sessionId + "&user=" + sessionStorage.userId, !1 }, ViewTieUp: function () { return sessionStorage.CurrentMenuselected = "nav_create", sessionStorage.setItem("IsmainmenuClicked", !0), window.location.href = "CreateRackRate.html?tokenkey=" + sessionStorage.sessionId + "&user=" + sessionStorage.userId, !1 }, ViewOverview: function () { return sessionStorage.CurrentMenuselected = "", sessionStorage.setItem("IsmainmenuClicked", !0), window.location.href = "Overview.html?tokenkey=" + sessionStorage.sessionId + "&user=" + sessionStorage.userId, !1 }, GetChannel: function (e) { Utility.ServiceCall("POST", "BaseRackRateService.svc/GetChannel", '{"SearchText": ""}', "json", !1, !1, function (e) { for (var t = e.GetChannelResult, a = 0; a < t.length; a++) $("<option />").text(t[a].ChannelName).val(t[a].ChannelId).appendTo("#dd_channel"); $("#dd_channel").attr("multiple", "multiple"), $("#dd_channel").multiselect({ includeSelectAllOption: !0, enableFiltering: !0, enableCaseInsensitiveFiltering: !0, onChange: function (e, t) { var a = $("#dd_channel option:selected"), n = []; $(a).each(function (e, t) { n.push([$(this).val()]) }), MasterQueue.GetDistributorCategory(n.valueOf()) } }), $("#dd_channel").multiselect("clearSelection") }) }, GetARNForChannelAndDistributorCategory: function () { var e = $("#dd_channel option:selected"), t = []; $(e).each(function (e, a) { t.push([$(this).val()]) }); var a = t.toString(), n = $("#dd_dist_category option:selected"), r = []; $(n).each(function (e, t) { r.push([$(this).val()]) }); var i = r.toString(); Utility.ServiceCall("POST", "BaseRackRateService.svc/GetARNForChannelAndDistributorCategory", JSON.stringify({ Channel: a, DistributorCategory: i }), "json", !1, !1, function (e) { MasterQueue.arns = [], MasterQueue.arns = JSON.parse(e.GetARNForChannelAndDistributorCategoryResult), $("#txt_arn").siblings("ul").remove(), $("#txt_arn_name").siblings("ul").remove(), $("#txt_arn").empty(), $("#txt_arn").tokenInput(MasterQueue.arns, { theme: "facebook", preventDuplicates: !0, resultsLimit: 10, onAdd: function (e) { MasterQueue.GetDistributor(e.id, "add", e.id) }, onDelete: function (e) { MasterQueue.GetDistributor(e.id, "remove", e.id) } }), $("#txt_arn_name").tokenInput(MasterQueue.arnName, { theme: "facebook", preventDuplicates: !0, resultsLimit: 10, onAdd: function (e) { MasterQueue.LoadARNToken(e.id, "add", e.id) }, onDelete: function (e) { MasterQueue.LoadARNToken(e.id, "remove", e.id) } }) }) }, GetDistributorCategory: function (e) { var t = "" == e ? "" : e.toString(); t = JSON.stringify(t), Utility.ServiceCall("POST", "BaseRackRateService.svc/GetDistributorCategory", '{"SearchText": ' + t + "}", "json", !1, !1, function (e) { var t = e.GetDistributorCategoryResult; $("#dd_dist_category").multiselect("destroy"), $("#dd_dist_category").empty(); for (var a = 0; a < t.length; a++) $("<option />").text(t[a].DistributorCategoryName).val(t[a].DistributorCategoryId).appendTo("#dd_dist_category"); $("#dd_dist_category").attr("multiple", "multiple"), $("#dd_dist_category").multiselect({ includeSelectAllOption: !0, enableFiltering: !0, enableCaseInsensitiveFiltering: !0 }) }) }, GetSchemeCategory: function (e) { Utility.ServiceCall("POST", "BaseRackRateService.svc/GetSchemeCategory", JSON.stringify({ SearchText: "", MemoTypeId: "0", IsCloseEnded: "2" }), "json", !1, !1, function (e) { for (var t = e.GetSchemeCategoryResult, a = 0; a < t.length; a++) $("<option />").text(t[a].SchemeCategoryName).val(t[a].SchemeCategoryId).appendTo("#dd_Scheme_category"); $("#dd_Scheme_category").attr("multiple", "multiple"), $("#dd_Scheme_category").multiselect({ includeSelectAllOption: !0, enableFiltering: !0, enableCaseInsensitiveFiltering: !0 }), $("#dd_Scheme_category").multiselect("clearSelection") }) }, SchemeCategoryChange: function () { MasterQueue.GetScheme($("#dd_Scheme_category option:selected").val()) }, GetScheme: function (e) { var t = "" == e ? "" : e.toString(); t = JSON.stringify(t), Utility.ServiceCall("POST", "BaseRackRateService.svc/GetScheme", '{"SearchText": ' + t + "}", "json", !1, !1, function (e) { var t = e.GetSchemeResult; $("#dd_Scheme").multiselect("destroy"), $("#dd_Scheme").empty(); for (var a = 0; a < t.length; a++) $("<option />").text(t[a].SchemeName).val(t[a].SchemeId).appendTo("#dd_Scheme"); $("#dd_Scheme").attr("multiple", "multiple"), $("#dd_Scheme").multiselect({ includeSelectAllOption: !0, enableFiltering: !0, enableCaseInsensitiveFiltering: !0 }), $("#dd_Scheme").multiselect("clearSelection") }) }, LoadARNS: function (e, t) { Utility.ServiceCall("POST", "BaseRackRateService.svc/GetARNFor", JSON.stringify({ Type: "", SearchText: "" }), "json", !1, !1, function (e) { }) }, GetARN: function (e) { Utility.ServiceCall("POST", "BaseRackRateService.svc/GetARN", JSON.stringify({ SearchText: "" }), "json", !1, !1, function (e) { $("#txt_arn").empty(), MasterQueue.arns = JSON.parse(e.GetARNResult), $("#txt_arn").tokenInput(MasterQueue.arns, { theme: "facebook", preventDuplicates: !0, resultsLimit: 10, onAdd: function (e) { MasterQueue.GetDistributor(e.id, "add", e.id) }, onDelete: function (e) { MasterQueue.GetDistributor(e.id, "remove", e.id) } }) }) }, GetARNName: function (e) { Utility.ServiceCall("POST", "BaseRackRateService.svc/GetARNName", JSON.stringify({ SearchText: "" }), "json", !1, !1, function (e) { $("#txt_arn_name").empty(), MasterQueue.arnName = JSON.parse(e.GetARNNameResult), $("#txt_arn_name").tokenInput(MasterQueue.arnName, { theme: "facebook", preventDuplicates: !0, resultsLimit: 10, onAdd: function (e) { MasterQueue.LoadARNToken(e.id, "add", e.id) }, onDelete: function (e) { MasterQueue.LoadARNToken(e.id, "remove", e.id) } }) }) }, LoadARNToken: function (e, t, a) { "add" == t ? Utility.ServiceCall("POST", "BaseRackRateService.svc/GetDistributorBasedOnID", JSON.stringify({ SearchText: e }), "json", !1, !1, function (t) { var a = t.GetDistributorBasedOnIDResult; $.each($("#txt_arn").tokenInput("get"), function (t, a) { a.id == e }), $.each(a, function (t, a) { a.DistributorId == e && $("#txt_arn").tokenInput("add", { id: a.DistributorId, name: a.ARN }) }) }) : $("#txt_arn").tokenInput("remove", { id: a }) }, GetDistributor: function (e, t, a) { "add" == t ? Utility.ServiceCall("POST", "BaseRackRateService.svc/GetChildArn", JSON.stringify({ ArnNo: e }), "json", !1, !1, function (t) { var a = t.GetChildArnResult; a.length > 1 ? $.each(a, function (t, a) { $.each($("#txt_arn").tokenInput("get"), function (e, t) { t.id == t.DistributorId }), $("#txt_arn").tokenInput("add", { id: a.DistributorId, name: a.ARN }), Utility.ServiceCall("POST", "BaseRackRateService.svc/GetDistributorBasedOnID", JSON.stringify({ SearchText: e }), "json", !1, !1, function (e) { var t = e.GetDistributorBasedOnIDResult; $.each($("#txt_arn_name").tokenInput("get"), function (e, a) { a.id == t[0].DistributorId }), $("#txt_arn_name").tokenInput("add", { id: t[0].DistributorId, name: t[0].DistributorName }) }) }) : 1 == a.length ? $("#txt_arn_name").tokenInput("add", { id: a[0].DistributorId, name: a[0].DistributorName }) : Utility.ServiceCall("POST", "BaseRackRateService.svc/GetDistributorBasedOnID", JSON.stringify({ SearchText: e }), "json", !1, !1, function (e) { var t = e.GetDistributorBasedOnIDResult; $.each($("#txt_arn_name").tokenInput("get"), function (e, a) { a.id == t[0].DistributorId }), $("#txt_arn_name").tokenInput("add", { id: t[0].DistributorId, name: t[0].DistributorName }) }) }) : Utility.ServiceCall("POST", "BaseRackRateService.svc/GetDistributorBasedOnID", JSON.stringify({ SearchText: e }), "json", !1, !1, function (e) { e.GetDistributorBasedOnIDResult; $("#txt_arn_name").tokenInput("remove", { id: a }) }) }, ReviewRemarks: function () { $("#txt_reject_remarks").val(MasterQueue.AdhocRemarks), $("#mdl_reject_remarks").modal("show") }, ReturnRadioBox: function (e, t) { return '<input type="radio" style="display: block;margin-left: auto;margin-right: auto;" name="radio_' + t.gid + '"  />' }, ReturnSearchHyperLink: function (e, t, a, n) { switch (sessionStorage.CurrentMenuselected = "nav_information", a.MemoTypeID) { case 1: return "Saved" == a.MemoStatus ? (sessionStorage.CurrentMenuselected = "nav_information", "<a href='./RackRateInitiate.html?memono=" + a.PaymentMemoId + "&status=" + a.MemoStatus + "&ptype=mq' style='text-decoration:none; color:#006bb4;border-bottom:1px solid #006bb4;'>" + a.MemoNumber + "</a>") : (sessionStorage.CurrentMenuselected = "nav_information", "<a href='./RackRateReview.html?memono=" + a.PaymentMemoId + "&status=" + a.MemoStatus + "&ptype=mq' style='text-decoration:none; color:#006bb4;border-bottom:1px solid #006bb4;'>" + a.MemoNumber + "</a>"); case 2: return "<a href='./TieUpInformation.html?memono=" + a.PaymentMemoId + "&status=" + a.MemoStatus + "&ptype=mq' style='text-decoration:none; color:#006bb4;border-bottom:1px solid #006bb4;'>" + a.MemoNumber + "</a>"; case 5: return "<a href='./SIPInformation.html?memono=" + a.PaymentMemoId + "&status=" + a.MemoStatus + "&ptype=mq' style='text-decoration:none; color:#006bb4;border-bottom:1px solid #006bb4;'>" + a.MemoNumber + "</a>"; default: if (3 == a.MemoTypeID || 4 == a.MemoTypeID) { var r = "'" + a.MemoNumber + "'"; return '<a href="#" style="text-decoration:none; color:#006bb4;border-bottom:1px solid #006bb4;" onclick="MasterQueue.PaymentDetail(' + a.PaymentMemoId + "," + r + ');">' + a.MemoNumber + "</a>" } return a.MemoNumber } }, PaymentDetail: function (e, t) { var a = 0, n = 0; $.isNumeric(t) ? (a = 0, n = e) : (a = e, n = 0); var r = ""; 0 == a && (r = "SmartSearch"), Utility.ServiceCall("POST", "AdHocService.svc/GetAdHocDetails", JSON.stringify({ PaymentTypeID: n, AdhocStatus: r, AdhocBatchID: a, CreatedByID: 0 }), "json", !1, !1, function (e) { var t = e.GetAdHocDetailsResult; if ($("#grid_sub_processing").jqGrid("clearGridData"), void 0 != t && t.length > 0) { MasterQueue.AdhocRemarks = t[0].MemoStatusDisplay; for (var a = 0; a < t.length; a++) jQuery("#grid_sub_processing").jqGrid("addRowData", parseInt(a + 1), t[a]); $("#modal_adhoc_payment_record").modal("show") } }) }, Viewreport: function (e, t) { var a = jQuery("#tbl_masterqueue").jqGrid("getRowData"); if (a.length > 0) for (var n = 0; n < a.length; n++) if (a[n].PaymentMemoId == e) { var r = ""; switch (t) { case 1: r = Utility.DistributorReportUrl.replace("###MemoNumber###", MasterQueue.remove_tags(a[n].MemoNumber)); break; case 2: r = Utility.TieUpCamsReportUrl.replace("###MemoNumber###", MasterQueue.remove_tags(a[n].MemoNumber)); break; case 5: r = Utility.SIPReportUrl.replace("###MemoNumber###", MasterQueue.remove_tags(a[n].MemoNumber)); break; default: r = "" } "" != r && MasterQueue.openWin(r) } }, remove_tags: function (e) { return jQuery(e).text() }, openWin: function (e) { sessionStorage.reportURL = e; window.open("ReportViewer.html", "_blank") }, clearFields: function () { sessionStorage.removeItem("DistributorCategoryMaster"), sessionStorage.removeItem("ChannelCreateMaster"), sessionStorage.removeItem("ARNCreateMaster"), $("#txt_arn").tokenInput("clear"), $("#dd_dist_category").multiselect("clearSelection"), $("#dd_channel").multiselect("clearSelection"), MasterQueue.ViewMasterQueue() }, ReturnViewRemarksHyperLink: function (e, t, a, n) { return '<a href="#" style="text-decoration:none; color:#006bb4;border-bottom:1px solid #006bb4;" onclick="MasterQueue.AdHocPaymentDetail(' + a.PaymentListId + ');">View Remarks</a>' }, AdHocPaymentDetail: function (e) { Utility.ServiceCall("POST", "AdHocService.svc/GetAuditPaymentDetails", JSON.stringify({ ID: parseInt(e) }), "json", !1, !1, function (e) { var t = e.GetAuditPaymentDetailsResult; if ($("#grid_view_remarks").jqGrid("clearGridData"), void 0 != t && t.length > 0) { for (var a = 0; a < t.length; a++) jQuery("#grid_view_remarks").jqGrid("addRowData", t[a].id, t[a]); $("#div_modal_view_remarks").modal("show") } }) } }; $(function () { MasterQueue.GetChannel(""), MasterQueue.GetDistributorCategory(""), MasterQueue.GetARN(""), MasterQueue.GetARNName(""); var e; jQuery("#tbl_masterqueue").jqGrid({ datatype: "local", width: null, shrinkToFit: !1, height: "510px", rowNum: -1, colNames: ["Select", "Memoid", "Memo Number", "Memo Type", "Memo Type ID", "Category", "ARN No", "ARN Name", "Date From", "Date To", "Status", "Status", "Raised By", "Raised On", "Time", "Ageing", "Last Action By", "Pending With"], colModel: [{ name: "edi", index: "edi", formatter: MasterQueue.ReturnRadioBox, width: "60px;", disabled: !0, hidden: !0, sortable: !1 }, { name: "PaymentMemoId", index: "PaymentMemoId", width: 120, hidden: !0, sortable: !1 }, { name: "MemoNumber", index: "MemoNumber", align: "center", formatter: MasterQueue.ReturnSearchHyperLink, sortable: !1 }, { name: "MemoTypeName", index: "MemoTypeName", width: 120, sortable: !1 }, { name: "MemoTypeID", index: "MemoTypeID", hidden: !0, sortable: !1 }, { name: "DistributorCategoryName", index: "DistributorCategoryName", width: 260, sortable: !1 }, { name: "ARNNo", index: "ARNNo", width: 90, sortable: !1 }, { name: "ARNName", index: "ARNName", width: 260, sortable: !1 }, { name: "DateFrom", index: "DateFrom", sorttype: "date", align: "center", width: 90, sortable: !1 }, { name: "DateTo", index: "DateTo", align: "center", width: 90, sortable: !1 }, { name: "MemoStatus", index: "MemoStatus", align: "center", width: 90, hidden: !0, sortable: !1 }, { name: "MemoStatusDisplay", index: "MemoStatusDisplay", align: "center", width: 90, sortable: !1 }, { name: "CreatedByName", index: "CreatedByName", align: "left", sortable: !1 }, { name: "RaisedOnDate", index: "RaisedOnDate", width: 90, align: "center", sortable: !1 }, { name: "RaisedOnTime", index: "RaisedOnTime", width: 50, align: "center", sortable: !1 }, { name: "Ageing", index: "Ageing", width: 70, align: "right", sortable: !1 }, { name: "ModifiedByName", index: "ModifiedByName", align: "left", sortable: !1 }, { name: "PendingWith", index: "PendingWith", align: "left", sortable: !1 }], sortorder: "desc", onSelectRow: function (t) { t && t !== e && (jQuery("#tbl_masterqueue").jqGrid("restoreRow", e), e = t) }, afterInsertRow: function (e, t) { t.PendingWith.indexOf(sessionStorage.UserName) > -1 ? $("#tbl_masterqueue").jqGrid("setRowData", e, !1, { background: "#BA8564" }) : "(SAC)" == t.PendingWith && 10 == sessionStorage.RoleID ? $("#tbl_masterqueue").jqGrid("setRowData", e, !1, { background: "#BA8564" }) : "(HOS)" == t.PendingWith && 7 == sessionStorage.RoleID && $("#tbl_masterqueue").jqGrid("setRowData", e, !1, { background: "#BA8564" }) } }), $grid = $("#grid_sub_processing"), jQuery("#grid_sub_processing").jqGrid({ datatype: "local", height: 450, width: null, shrinkToFit: !1, colNames: ["S.No.", "ARN No.", "ARN Name", "Scheme", "Channel", "Branch", "Period From", "Period To", "Amount Basis", "Rate (Bps)", "AUM (Lakhs) / Gross Sales (Actual)", "Payment Amount", "Actual Amount Payable (Round Off)", "Remarks", "IsRequired", "PaymentMemoId", "PaymentListId"], colModel: [{ name: "SerialNo", index: "SerialNo", width: 60, align: "center", sortable: !1 }, { name: "ARNNo", width: 90, index: "ARNNo", sortable: !1 }, { name: "ARNName", width: 260, index: "ARNName", sortable: !1 }, { name: "SchemeName", width: 250, index: "SchemeName", sortable: !1 }, { name: "ChannelName", width: 90, index: "ChannelName", sortable: !1 }, { name: "BranchName", index: "BranchName", width: 105, sortable: !1 }, { name: "DateFrom", width: 120, index: "DateFrom", align: "center", sortable: !1 }, { name: "DateTo", width: 110, index: "DateTo", align: "center", sortable: !1 }, { name: "AmountBasisName", index: "AmountBasisName", width: 130, sortable: !1 }, { name: "Rate", index: "Rate", width: 90, sortable: !1 }, { name: "MobilizationAmount", index: "MobilizationAmount", width: 250, sortable: !1 }, { name: "PaymentAmount", index: "PaymentAmount", width: 200, sortable: !1 }, { name: "FreeTextField1", index: "FreeTextField1", width: 250, sortable: !1 }, { name: "", index: "", align: "center", formatter: MasterQueue.ReturnViewRemarksHyperLink, sortable: !1 }, { name: "IsRequired", index: "IsRequired", hidden: !0, sortable: !1 }, { name: "PaymentMemoId", index: "PaymentMemoId", hidden: !0, sortable: !1 }, { name: "PaymentListId", index: "PaymentListId", hidden: !0, sortable: !1 }], afterInsertRow: function (e, t) { var a = $("#txt_arn").tokenInput("get"), n = []; $.each(a, function (e, t) { n.push(t.name) }); for (var r = 0; r < n.length; r++) t.ARNNo == n[r] && $("#grid_sub_processing").jqGrid("setRowData", e, !1, { background: "#01DF01" }) } }), jQuery("#grid_view_remarks").jqGrid({ datatype: "json", height: 200, width: 765, shrinkToFit: !1, colNames: ["Remarks", "Remarks By", "Modified Date"], colModel: [{ name: "Remarks", width: 545, index: "Remarks", align: "left", sortable: !1 }, { name: "RemarksBy", width: 100, index: "RemarksBy", sortable: !1 }, { name: "Date", width: 120, index: "Date", align: "left", sortable: !1 }] }); var t = null == sessionStorage.getItem("DistributorCategoryMaster") ? "" : sessionStorage.getItem("DistributorCategoryMaster").split(","), a = null == sessionStorage.getItem("ChannelCreateMaster") ? "" : sessionStorage.getItem("ChannelCreateMaster").split(","), n = null == sessionStorage.getItem("ARNCreateMaster") ? "" : sessionStorage.getItem("ARNCreateMaster").split(","); if ($("#txt_arn").tokenInput("clear"), $("#dd_dist_category").multiselect("clearSelection"), $("#dd_channel").multiselect("clearSelection"), null != n) for (var r = 0; r < n.length; r++) $.each(MasterQueue.arns, function (e, t) { t.name == n[r] && $("#txt_arn").tokenInput("add", { id: t.id, name: t.name }) }); if (null != t) for (var r = 0; r < t.length; r++) "" != t[r] && $("#dd_dist_category").multiselect("select", t[r]); if (null != a) for (var r = 0; r < a.length; r++) "" != a[r] && $("#dd_channel").multiselect("select", a[r]); MasterQueue.ViewMasterQueue() });