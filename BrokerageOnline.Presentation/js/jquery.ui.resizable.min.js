!function (t, e) { t.widget("ui.resizable", t.ui.mouse, { version: "1.9.2", widgetEventPrefix: "resize", options: { alsoResize: !1, animate: !1, animateDuration: "slow", animateEasing: "swing", aspectRatio: !1, autoHide: !1, containment: !1, ghost: !1, grid: !1, handles: "e,s,se", helper: !1, maxHeight: null, maxWidth: null, minHeight: 10, minWidth: 10, zIndex: 1e3 }, _create: function () { var e = this, i = this.options; if (this.element.addClass("ui-resizable"), t.extend(this, { _aspectRatio: !!i.aspectRatio, aspectRatio: i.aspectRatio, originalElement: this.element, _proportionallyResizeElements: [], _helper: i.helper || i.ghost || i.animate ? i.helper || "ui-resizable-helper" : null }), this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i) && (this.element.wrap(t('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({ position: this.element.css("position"), width: this.element.outerWidth(), height: this.element.outerHeight(), top: this.element.css("top"), left: this.element.css("left") })), this.element = this.element.parent().data("resizable", this.element.data("resizable")), this.elementIsWrapper = !0, this.element.css({ marginLeft: this.originalElement.css("marginLeft"), marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom") }), this.originalElement.css({ marginLeft: 0, marginTop: 0, marginRight: 0, marginBottom: 0 }), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({ position: "static", zoom: 1, display: "block" })), this.originalElement.css({ margin: this.originalElement.css("margin") }), this._proportionallyResize()), this.handles = i.handles || (t(".ui-resizable-handle", this.element).length ? { n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw" } : "e,s,se"), this.handles.constructor == String) { "all" == this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"); var s = this.handles.split(","); this.handles = {}; for (var h = 0; h < s.length; h++) { var n = t.trim(s[h]), o = "ui-resizable-" + n, a = t('<div class="ui-resizable-handle ' + o + '"></div>'); a.css({ zIndex: i.zIndex }), "se" == n && a.addClass("ui-icon ui-icon-gripsmall-diagonal-se"), this.handles[n] = ".ui-resizable-" + n, this.element.append(a) } } this._renderAxis = function (e) { e = e || this.element; for (var i in this.handles) { if (this.handles[i].constructor == String && (this.handles[i] = t(this.handles[i], this.element).show()), this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) { var s = t(this.handles[i], this.element), h = 0; h = /sw|ne|nw|se|n|s/.test(i) ? s.outerHeight() : s.outerWidth(); var n = ["padding", /ne|nw|n/.test(i) ? "Top" : /se|sw|s/.test(i) ? "Bottom" : /^e$/.test(i) ? "Right" : "Left"].join(""); e.css(n, h), this._proportionallyResize() } t(this.handles[i]).length } }, this._renderAxis(this.element), this._handles = t(".ui-resizable-handle", this.element).disableSelection(), this._handles.mouseover(function () { if (!e.resizing) { if (this.className) var t = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i); e.axis = t && t[1] ? t[1] : "se" } }), i.autoHide && (this._handles.hide(), t(this.element).addClass("ui-resizable-autohide").mouseenter(function () { i.disabled || (t(this).removeClass("ui-resizable-autohide"), e._handles.show()) }).mouseleave(function () { i.disabled || e.resizing || (t(this).addClass("ui-resizable-autohide"), e._handles.hide()) })), this._mouseInit() }, _destroy: function () { this._mouseDestroy(); var e = function (e) { t(e).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove() }; if (this.elementIsWrapper) { e(this.element); var i = this.element; this.originalElement.css({ position: i.css("position"), width: i.outerWidth(), height: i.outerHeight(), top: i.css("top"), left: i.css("left") }).insertAfter(i), i.remove() } return this.originalElement.css("resize", this.originalResizeStyle), e(this.originalElement), this }, _mouseCapture: function (e) { var i = !1; for (var s in this.handles) t(this.handles[s])[0] == e.target && (i = !0); return !this.options.disabled && i }, _mouseStart: function (e) { var s = this.options, h = this.element.position(), n = this.element; this.resizing = !0, this.documentScroll = { top: t(document).scrollTop(), left: t(document).scrollLeft() }, (n.is(".ui-draggable") || /absolute/.test(n.css("position"))) && n.css({ position: "absolute", top: h.top, left: h.left }), this._renderProxy(); var o = i(this.helper.css("left")), a = i(this.helper.css("top")); s.containment && (o += t(s.containment).scrollLeft() || 0, a += t(s.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = { left: o, top: a }, this.size = this._helper ? { width: n.outerWidth(), height: n.outerHeight() } : { width: n.width(), height: n.height() }, this.originalSize = this._helper ? { width: n.outerWidth(), height: n.outerHeight() } : { width: n.width(), height: n.height() }, this.originalPosition = { left: o, top: a }, this.sizeDiff = { width: n.outerWidth() - n.width(), height: n.outerHeight() - n.height() }, this.originalMousePosition = { left: e.pageX, top: e.pageY }, this.aspectRatio = "number" == typeof s.aspectRatio ? s.aspectRatio : this.originalSize.width / this.originalSize.height || 1; var l = t(".ui-resizable-" + this.axis).css("cursor"); return t("body").css("cursor", "auto" == l ? this.axis + "-resize" : l), n.addClass("ui-resizable-resizing"), this._propagate("start", e), !0 }, _mouseDrag: function (t) { var e = this.helper, i = (this.options, this.originalMousePosition), s = this.axis, h = t.pageX - i.left || 0, n = t.pageY - i.top || 0, o = this._change[s]; if (!o) return !1; var a = o.apply(this, [t, h, n]); return this._updateVirtualBoundaries(t.shiftKey), (this._aspectRatio || t.shiftKey) && (a = this._updateRatio(a, t)), a = this._respectSize(a, t), this._propagate("resize", t), e.css({ top: this.position.top + "px", left: this.position.left + "px", width: this.size.width + "px", height: this.size.height + "px" }), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), this._updateCache(a), this._trigger("resize", t, this.ui()), !1 }, _mouseStop: function (e) { this.resizing = !1; var i = this.options, s = this; if (this._helper) { var h = this._proportionallyResizeElements, n = h.length && /textarea/i.test(h[0].nodeName), o = n && t.ui.hasScroll(h[0], "left") ? 0 : s.sizeDiff.height, a = n ? 0 : s.sizeDiff.width, l = { width: s.helper.width() - a, height: s.helper.height() - o }, r = parseInt(s.element.css("left"), 10) + (s.position.left - s.originalPosition.left) || null, p = parseInt(s.element.css("top"), 10) + (s.position.top - s.originalPosition.top) || null; i.animate || this.element.css(t.extend(l, { top: p, left: r })), s.helper.height(s.size.height), s.helper.width(s.size.width), this._helper && !i.animate && this._proportionallyResize() } return t("body").css("cursor", "auto"), this.element.removeClass("ui-resizable-resizing"), this._propagate("stop", e), this._helper && this.helper.remove(), !1 }, _updateVirtualBoundaries: function (t) { var e, i, h, n, o, a = this.options; o = { minWidth: s(a.minWidth) ? a.minWidth : 0, maxWidth: s(a.maxWidth) ? a.maxWidth : 1 / 0, minHeight: s(a.minHeight) ? a.minHeight : 0, maxHeight: s(a.maxHeight) ? a.maxHeight : 1 / 0 }, (this._aspectRatio || t) && (e = o.minHeight * this.aspectRatio, h = o.minWidth / this.aspectRatio, i = o.maxHeight * this.aspectRatio, n = o.maxWidth / this.aspectRatio, e > o.minWidth && (o.minWidth = e), h > o.minHeight && (o.minHeight = h), i < o.maxWidth && (o.maxWidth = i), n < o.maxHeight && (o.maxHeight = n)), this._vBoundaries = o }, _updateCache: function (t) { this.options; this.offset = this.helper.offset(), s(t.left) && (this.position.left = t.left), s(t.top) && (this.position.top = t.top), s(t.height) && (this.size.height = t.height), s(t.width) && (this.size.width = t.width) }, _updateRatio: function (t, e) { var i = (this.options, this.position), h = this.size, n = this.axis; return s(t.height) ? t.width = t.height * this.aspectRatio : s(t.width) && (t.height = t.width / this.aspectRatio), "sw" == n && (t.left = i.left + (h.width - t.width), t.top = null), "nw" == n && (t.top = i.top + (h.height - t.height), t.left = i.left + (h.width - t.width)), t }, _respectSize: function (t, e) { var i = (this.helper, this._vBoundaries), h = (this._aspectRatio || e.shiftKey, this.axis), n = s(t.width) && i.maxWidth && i.maxWidth < t.width, o = s(t.height) && i.maxHeight && i.maxHeight < t.height, a = s(t.width) && i.minWidth && i.minWidth > t.width, l = s(t.height) && i.minHeight && i.minHeight > t.height; a && (t.width = i.minWidth), l && (t.height = i.minHeight), n && (t.width = i.maxWidth), o && (t.height = i.maxHeight); var r = this.originalPosition.left + this.originalSize.width, p = this.position.top + this.size.height, d = /sw|nw|w/.test(h), g = /nw|ne|n/.test(h); a && d && (t.left = r - i.minWidth), n && d && (t.left = r - i.maxWidth), l && g && (t.top = p - i.minHeight), o && g && (t.top = p - i.maxHeight); var f = !t.width && !t.height; return f && !t.left && t.top ? t.top = null : f && !t.top && t.left && (t.left = null), t }, _proportionallyResize: function () { this.options; if (this._proportionallyResizeElements.length) for (var e = this.helper || this.element, i = 0; i < this._proportionallyResizeElements.length; i++) { var s = this._proportionallyResizeElements[i]; if (!this.borderDif) { var h = [s.css("borderTopWidth"), s.css("borderRightWidth"), s.css("borderBottomWidth"), s.css("borderLeftWidth")], n = [s.css("paddingTop"), s.css("paddingRight"), s.css("paddingBottom"), s.css("paddingLeft")]; this.borderDif = t.map(h, function (t, e) { var i = parseInt(t, 10) || 0, s = parseInt(n[e], 10) || 0; return i + s }) } s.css({ height: e.height() - this.borderDif[0] - this.borderDif[2] || 0, width: e.width() - this.borderDif[1] - this.borderDif[3] || 0 }) } }, _renderProxy: function () { var e = this.element, i = this.options; if (this.elementOffset = e.offset(), this._helper) { this.helper = this.helper || t('<div style="overflow:hidden;"></div>'); var s = t.ui.ie6 ? 1 : 0, h = t.ui.ie6 ? 2 : -1; this.helper.addClass(this._helper).css({ width: this.element.outerWidth() + h, height: this.element.outerHeight() + h, position: "absolute", left: this.elementOffset.left - s + "px", top: this.elementOffset.top - s + "px", zIndex: ++i.zIndex }), this.helper.appendTo("body").disableSelection() } else this.helper = this.element }, _change: { e: function (t, e, i) { return { width: this.originalSize.width + e } }, w: function (t, e, i) { var s = (this.options, this.originalSize), h = this.originalPosition; return { left: h.left + e, width: s.width - e } }, n: function (t, e, i) { var s = (this.options, this.originalSize), h = this.originalPosition; return { top: h.top + i, height: s.height - i } }, s: function (t, e, i) { return { height: this.originalSize.height + i } }, se: function (e, i, s) { return t.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [e, i, s])) }, sw: function (e, i, s) { return t.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [e, i, s])) }, ne: function (e, i, s) { return t.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [e, i, s])) }, nw: function (e, i, s) { return t.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [e, i, s])) } }, _propagate: function (e, i) { t.ui.plugin.call(this, e, [i, this.ui()]), "resize" != e && this._trigger(e, i, this.ui()) }, plugins: {}, ui: function () { return { originalElement: this.originalElement, element: this.element, helper: this.helper, position: this.position, size: this.size, originalSize: this.originalSize, originalPosition: this.originalPosition } } }), t.ui.plugin.add("resizable", "alsoResize", { start: function (e, i) { var s = t(this).data("resizable"), h = s.options, n = function (e) { t(e).each(function () { var e = t(this); e.data("resizable-alsoresize", { width: parseInt(e.width(), 10), height: parseInt(e.height(), 10), left: parseInt(e.css("left"), 10), top: parseInt(e.css("top"), 10) }) }) }; "object" != typeof h.alsoResize || h.alsoResize.parentNode ? n(h.alsoResize) : h.alsoResize.length ? (h.alsoResize = h.alsoResize[0], n(h.alsoResize)) : t.each(h.alsoResize, function (t) { n(t) }) }, resize: function (e, i) { var s = t(this).data("resizable"), h = s.options, n = s.originalSize, o = s.originalPosition, a = { height: s.size.height - n.height || 0, width: s.size.width - n.width || 0, top: s.position.top - o.top || 0, left: s.position.left - o.left || 0 }, l = function (e, s) { t(e).each(function () { var e = t(this), h = t(this).data("resizable-alsoresize"), n = {}, o = s && s.length ? s : e.parents(i.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"]; t.each(o, function (t, e) { var i = (h[e] || 0) + (a[e] || 0); i && i >= 0 && (n[e] = i || null) }), e.css(n) }) }; "object" != typeof h.alsoResize || h.alsoResize.nodeType ? l(h.alsoResize) : t.each(h.alsoResize, function (t, e) { l(t, e) }) }, stop: function (e, i) { t(this).removeData("resizable-alsoresize") } }), t.ui.plugin.add("resizable", "animate", { stop: function (e, i) { var s = t(this).data("resizable"), h = s.options, n = s._proportionallyResizeElements, o = n.length && /textarea/i.test(n[0].nodeName), a = o && t.ui.hasScroll(n[0], "left") ? 0 : s.sizeDiff.height, l = o ? 0 : s.sizeDiff.width, r = { width: s.size.width - l, height: s.size.height - a }, p = parseInt(s.element.css("left"), 10) + (s.position.left - s.originalPosition.left) || null, d = parseInt(s.element.css("top"), 10) + (s.position.top - s.originalPosition.top) || null; s.element.animate(t.extend(r, d && p ? { top: d, left: p } : {}), { duration: h.animateDuration, easing: h.animateEasing, step: function () { var i = { width: parseInt(s.element.css("width"), 10), height: parseInt(s.element.css("height"), 10), top: parseInt(s.element.css("top"), 10), left: parseInt(s.element.css("left"), 10) }; n && n.length && t(n[0]).css({ width: i.width, height: i.height }), s._updateCache(i), s._propagate("resize", e) } }) } }), t.ui.plugin.add("resizable", "containment", { start: function (e, s) { var h = t(this).data("resizable"), n = h.options, o = h.element, a = n.containment, l = a instanceof t ? a.get(0) : /parent/.test(a) ? o.parent().get(0) : a; if (l) if (h.containerElement = t(l), /document/.test(a) || a == document) h.containerOffset = { left: 0, top: 0 }, h.containerPosition = { left: 0, top: 0 }, h.parentData = { element: t(document), left: 0, top: 0, width: t(document).width(), height: t(document).height() || document.body.parentNode.scrollHeight }; else { var r = t(l), p = []; t(["Top", "Right", "Left", "Bottom"]).each(function (t, e) { p[t] = i(r.css("padding" + e)) }), h.containerOffset = r.offset(), h.containerPosition = r.position(), h.containerSize = { height: r.innerHeight() - p[3], width: r.innerWidth() - p[1] }; var d = h.containerOffset, g = h.containerSize.height, f = h.containerSize.width, c = t.ui.hasScroll(l, "left") ? l.scrollWidth : f, u = t.ui.hasScroll(l) ? l.scrollHeight : g; h.parentData = { element: l, left: d.left, top: d.top, width: c, height: u } } }, resize: function (e, i) { var s = t(this).data("resizable"), h = s.options, n = (s.containerSize, s.containerOffset), o = (s.size, s.position), a = s._aspectRatio || e.shiftKey, l = { top: 0, left: 0 }, r = s.containerElement; r[0] != document && /static/.test(r.css("position")) && (l = n), o.left < (s._helper ? n.left : 0) && (s.size.width = s.size.width + (s._helper ? s.position.left - n.left : s.position.left - l.left), a && (s.size.height = s.size.width / s.aspectRatio), s.position.left = h.helper ? n.left : 0), o.top < (s._helper ? n.top : 0) && (s.size.height = s.size.height + (s._helper ? s.position.top - n.top : s.position.top), a && (s.size.width = s.size.height * s.aspectRatio), s.position.top = s._helper ? n.top : 0), s.offset.left = s.parentData.left + s.position.left, s.offset.top = s.parentData.top + s.position.top; var p = Math.abs((s._helper ? s.offset.left - l.left : s.offset.left - l.left) + s.sizeDiff.width), d = Math.abs((s._helper ? s.offset.top - l.top : s.offset.top - n.top) + s.sizeDiff.height), g = s.containerElement.get(0) == s.element.parent().get(0), f = /relative|absolute/.test(s.containerElement.css("position")); g && f && (p -= s.parentData.left), p + s.size.width >= s.parentData.width && (s.size.width = s.parentData.width - p, a && (s.size.height = s.size.width / s.aspectRatio)), d + s.size.height >= s.parentData.height && (s.size.height = s.parentData.height - d, a && (s.size.width = s.size.height * s.aspectRatio)) }, stop: function (e, i) { var s = t(this).data("resizable"), h = s.options, n = (s.position, s.containerOffset), o = s.containerPosition, a = s.containerElement, l = t(s.helper), r = l.offset(), p = l.outerWidth() - s.sizeDiff.width, d = l.outerHeight() - s.sizeDiff.height; s._helper && !h.animate && /relative/.test(a.css("position")) && t(this).css({ left: r.left - o.left - n.left, width: p, height: d }), s._helper && !h.animate && /static/.test(a.css("position")) && t(this).css({ left: r.left - o.left - n.left, width: p, height: d }) } }), t.ui.plugin.add("resizable", "ghost", { start: function (e, i) { var s = t(this).data("resizable"), h = s.options, n = s.size; s.ghost = s.originalElement.clone(), s.ghost.css({ opacity: .25, display: "block", position: "relative", height: n.height, width: n.width, margin: 0, left: 0, top: 0 }).addClass("ui-resizable-ghost").addClass("string" == typeof h.ghost ? h.ghost : ""), s.ghost.appendTo(s.helper) }, resize: function (e, i) { var s = t(this).data("resizable"); s.options; s.ghost && s.ghost.css({ position: "relative", height: s.size.height, width: s.size.width }) }, stop: function (e, i) { var s = t(this).data("resizable"); s.options; s.ghost && s.helper && s.helper.get(0).removeChild(s.ghost.get(0)) } }), t.ui.plugin.add("resizable", "grid", { resize: function (e, i) { var s = t(this).data("resizable"), h = s.options, n = s.size, o = s.originalSize, a = s.originalPosition, l = s.axis; h._aspectRatio || e.shiftKey; h.grid = "number" == typeof h.grid ? [h.grid, h.grid] : h.grid; var r = Math.round((n.width - o.width) / (h.grid[0] || 1)) * (h.grid[0] || 1), p = Math.round((n.height - o.height) / (h.grid[1] || 1)) * (h.grid[1] || 1); /^(se|s|e)$/.test(l) ? (s.size.width = o.width + r, s.size.height = o.height + p) : /^(ne)$/.test(l) ? (s.size.width = o.width + r, s.size.height = o.height + p, s.position.top = a.top - p) : /^(sw)$/.test(l) ? (s.size.width = o.width + r, s.size.height = o.height + p, s.position.left = a.left - r) : (s.size.width = o.width + r, s.size.height = o.height + p, s.position.top = a.top - p, s.position.left = a.left - r) } }); var i = function (t) { return parseInt(t, 10) || 0 }, s = function (t) { return !isNaN(parseInt(t, 10)) } }(jQuery);